// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpcservice.proto

#include "rpcservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace okrpc {
class ListRpcRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRpcRequest>
      _instance;
} _ListRpcRequest_default_instance_;
class ListRpcResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRpcResponse>
      _instance;
} _ListRpcResponse_default_instance_;
class GetServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceRequest>
      _instance;
} _GetServiceRequest_default_instance_;
class GetServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetServiceResponse>
      _instance;
} _GetServiceResponse_default_instance_;
}  // namespace okrpc
namespace protobuf_rpcservice_2eproto {
static void InitDefaultsListRpcRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::okrpc::_ListRpcRequest_default_instance_;
    new (ptr) ::okrpc::ListRpcRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::okrpc::ListRpcRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListRpcRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListRpcRequest}, {}};

static void InitDefaultsListRpcResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::okrpc::_ListRpcResponse_default_instance_;
    new (ptr) ::okrpc::ListRpcResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::okrpc::ListRpcResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListRpcResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListRpcResponse}, {}};

static void InitDefaultsGetServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::okrpc::_GetServiceRequest_default_instance_;
    new (ptr) ::okrpc::GetServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::okrpc::GetServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetServiceRequest}, {}};

static void InitDefaultsGetServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::okrpc::_GetServiceResponse_default_instance_;
    new (ptr) ::okrpc::GetServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::okrpc::GetServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetServiceResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ListRpcRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListRpcResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetServiceResponse.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcRequest, list_method_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcResponse, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::ListRpcResponse, method_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceResponse, proto_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::okrpc::GetServiceResponse, proto_file_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::okrpc::ListRpcRequest)},
  { 7, -1, sizeof(::okrpc::ListRpcResponse)},
  { 15, -1, sizeof(::okrpc::GetServiceRequest)},
  { 21, -1, sizeof(::okrpc::GetServiceResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::okrpc::_ListRpcRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::okrpc::_ListRpcResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::okrpc::_GetServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::okrpc::_GetServiceResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rpcservice.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020rpcservice.proto\022\005okrpc\032\trpc.proto\";\n\016"
      "ListRpcRequest\022\024\n\014service_name\030\001 \001(\t\022\023\n\013"
      "list_method\030\002 \001(\010\"]\n\017ListRpcResponse\022\037\n\005"
      "error\030\001 \001(\0162\020.okrpc.ErrorCode\022\024\n\014service"
      "_name\030\002 \003(\t\022\023\n\013method_name\030\003 \003(\t\")\n\021GetS"
      "erviceRequest\022\024\n\014service_name\030\001 \001(\t\"b\n\022G"
      "etServiceResponse\022\037\n\005error\030\001 \001(\0162\020.okrpc"
      ".ErrorCode\022\022\n\nproto_file\030\002 \003(\t\022\027\n\017proto_"
      "file_name\030\003 \003(\t2\211\001\n\nRpcService\0228\n\007listRp"
      "c\022\025.okrpc.ListRpcRequest\032\026.okrpc.ListRpc"
      "Response\022A\n\ngetService\022\030.okrpc.GetServic"
      "eRequest\032\031.okrpc.GetServiceResponseB7\n\033c"
      "om.chenshuo.muduo.protorpcB\017RpcServicePr"
      "oto\200\001\001\210\001\001\220\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 540);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpcservice.proto", &protobuf_RegisterTypes);
  ::protobuf_rpc_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpcservice_2eproto
namespace okrpc {

// ===================================================================

void ListRpcRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRpcRequest::kServiceNameFieldNumber;
const int ListRpcRequest::kListMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRpcRequest::ListRpcRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpcservice_2eproto::scc_info_ListRpcRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:okrpc.ListRpcRequest)
}
ListRpcRequest::ListRpcRequest(const ListRpcRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  list_method_ = from.list_method_;
  // @@protoc_insertion_point(copy_constructor:okrpc.ListRpcRequest)
}

void ListRpcRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  list_method_ = false;
}

ListRpcRequest::~ListRpcRequest() {
  // @@protoc_insertion_point(destructor:okrpc.ListRpcRequest)
  SharedDtor();
}

void ListRpcRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRpcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListRpcRequest::descriptor() {
  ::protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRpcRequest& ListRpcRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpcservice_2eproto::scc_info_ListRpcRequest.base);
  return *internal_default_instance();
}


void ListRpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:okrpc.ListRpcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  list_method_ = false;
  _internal_metadata_.Clear();
}

bool ListRpcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:okrpc.ListRpcRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.ListRpcRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool list_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:okrpc.ListRpcRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:okrpc.ListRpcRequest)
  return false;
#undef DO_
}

void ListRpcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:okrpc.ListRpcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // bool list_method = 2;
  if (this->list_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->list_method(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:okrpc.ListRpcRequest)
}

::google::protobuf::uint8* ListRpcRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:okrpc.ListRpcRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // bool list_method = 2;
  if (this->list_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->list_method(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:okrpc.ListRpcRequest)
  return target;
}

size_t ListRpcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:okrpc.ListRpcRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // bool list_method = 2;
  if (this->list_method() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRpcRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:okrpc.ListRpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRpcRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRpcRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:okrpc.ListRpcRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:okrpc.ListRpcRequest)
    MergeFrom(*source);
  }
}

void ListRpcRequest::MergeFrom(const ListRpcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:okrpc.ListRpcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.list_method() != 0) {
    set_list_method(from.list_method());
  }
}

void ListRpcRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:okrpc.ListRpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRpcRequest::CopyFrom(const ListRpcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:okrpc.ListRpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRpcRequest::IsInitialized() const {
  return true;
}

void ListRpcRequest::Swap(ListRpcRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRpcRequest::InternalSwap(ListRpcRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(list_method_, other->list_method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListRpcRequest::GetMetadata() const {
  protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRpcResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRpcResponse::kErrorFieldNumber;
const int ListRpcResponse::kServiceNameFieldNumber;
const int ListRpcResponse::kMethodNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRpcResponse::ListRpcResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpcservice_2eproto::scc_info_ListRpcResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:okrpc.ListRpcResponse)
}
ListRpcResponse::ListRpcResponse(const ListRpcResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      service_name_(from.service_name_),
      method_name_(from.method_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:okrpc.ListRpcResponse)
}

void ListRpcResponse::SharedCtor() {
  error_ = 0;
}

ListRpcResponse::~ListRpcResponse() {
  // @@protoc_insertion_point(destructor:okrpc.ListRpcResponse)
  SharedDtor();
}

void ListRpcResponse::SharedDtor() {
}

void ListRpcResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListRpcResponse::descriptor() {
  ::protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRpcResponse& ListRpcResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpcservice_2eproto::scc_info_ListRpcResponse.base);
  return *internal_default_instance();
}


void ListRpcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:okrpc.ListRpcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.Clear();
  method_name_.Clear();
  error_ = 0;
  _internal_metadata_.Clear();
}

bool ListRpcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:okrpc.ListRpcResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .okrpc.ErrorCode error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::okrpc::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string service_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name(this->service_name_size() - 1).data(),
            static_cast<int>(this->service_name(this->service_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.ListRpcResponse.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string method_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_method_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method_name(this->method_name_size() - 1).data(),
            static_cast<int>(this->method_name(this->method_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.ListRpcResponse.method_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:okrpc.ListRpcResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:okrpc.ListRpcResponse)
  return false;
#undef DO_
}

void ListRpcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:okrpc.ListRpcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // repeated string service_name = 2;
  for (int i = 0, n = this->service_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name(i).data(), static_cast<int>(this->service_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcResponse.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->service_name(i), output);
  }

  // repeated string method_name = 3;
  for (int i = 0, n = this->method_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name(i).data(), static_cast<int>(this->method_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcResponse.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->method_name(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:okrpc.ListRpcResponse)
}

::google::protobuf::uint8* ListRpcResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:okrpc.ListRpcResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // repeated string service_name = 2;
  for (int i = 0, n = this->service_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name(i).data(), static_cast<int>(this->service_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcResponse.service_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->service_name(i), target);
  }

  // repeated string method_name = 3;
  for (int i = 0, n = this->method_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name(i).data(), static_cast<int>(this->method_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.ListRpcResponse.method_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->method_name(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:okrpc.ListRpcResponse)
  return target;
}

size_t ListRpcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:okrpc.ListRpcResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string service_name = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->service_name_size());
  for (int i = 0, n = this->service_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->service_name(i));
  }

  // repeated string method_name = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->method_name_size());
  for (int i = 0, n = this->method_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->method_name(i));
  }

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListRpcResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:okrpc.ListRpcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRpcResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRpcResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:okrpc.ListRpcResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:okrpc.ListRpcResponse)
    MergeFrom(*source);
  }
}

void ListRpcResponse::MergeFrom(const ListRpcResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:okrpc.ListRpcResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_name_.MergeFrom(from.service_name_);
  method_name_.MergeFrom(from.method_name_);
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void ListRpcResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:okrpc.ListRpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRpcResponse::CopyFrom(const ListRpcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:okrpc.ListRpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRpcResponse::IsInitialized() const {
  return true;
}

void ListRpcResponse::Swap(ListRpcResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRpcResponse::InternalSwap(ListRpcResponse* other) {
  using std::swap;
  service_name_.InternalSwap(CastToBase(&other->service_name_));
  method_name_.InternalSwap(CastToBase(&other->method_name_));
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListRpcResponse::GetMetadata() const {
  protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceRequest::kServiceNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceRequest::GetServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpcservice_2eproto::scc_info_GetServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:okrpc.GetServiceRequest)
}
GetServiceRequest::GetServiceRequest(const GetServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:okrpc.GetServiceRequest)
}

void GetServiceRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetServiceRequest::~GetServiceRequest() {
  // @@protoc_insertion_point(destructor:okrpc.GetServiceRequest)
  SharedDtor();
}

void GetServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetServiceRequest::descriptor() {
  ::protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceRequest& GetServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpcservice_2eproto::scc_info_GetServiceRequest.base);
  return *internal_default_instance();
}


void GetServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:okrpc.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:okrpc.GetServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.GetServiceRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:okrpc.GetServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:okrpc.GetServiceRequest)
  return false;
#undef DO_
}

void GetServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:okrpc.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:okrpc.GetServiceRequest)
}

::google::protobuf::uint8* GetServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:okrpc.GetServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:okrpc.GetServiceRequest)
  return target;
}

size_t GetServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:okrpc.GetServiceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:okrpc.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:okrpc.GetServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:okrpc.GetServiceRequest)
    MergeFrom(*source);
  }
}

void GetServiceRequest::MergeFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:okrpc.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void GetServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:okrpc.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceRequest::CopyFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:okrpc.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRequest::IsInitialized() const {
  return true;
}

void GetServiceRequest::Swap(GetServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceRequest::InternalSwap(GetServiceRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetServiceRequest::GetMetadata() const {
  protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceResponse::kErrorFieldNumber;
const int GetServiceResponse::kProtoFileFieldNumber;
const int GetServiceResponse::kProtoFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceResponse::GetServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpcservice_2eproto::scc_info_GetServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:okrpc.GetServiceResponse)
}
GetServiceResponse::GetServiceResponse(const GetServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      proto_file_(from.proto_file_),
      proto_file_name_(from.proto_file_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:okrpc.GetServiceResponse)
}

void GetServiceResponse::SharedCtor() {
  error_ = 0;
}

GetServiceResponse::~GetServiceResponse() {
  // @@protoc_insertion_point(destructor:okrpc.GetServiceResponse)
  SharedDtor();
}

void GetServiceResponse::SharedDtor() {
}

void GetServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetServiceResponse::descriptor() {
  ::protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetServiceResponse& GetServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpcservice_2eproto::scc_info_GetServiceResponse.base);
  return *internal_default_instance();
}


void GetServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:okrpc.GetServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proto_file_.Clear();
  proto_file_name_.Clear();
  error_ = 0;
  _internal_metadata_.Clear();
}

bool GetServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:okrpc.GetServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .okrpc.ErrorCode error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::okrpc::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string proto_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_proto_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proto_file(this->proto_file_size() - 1).data(),
            static_cast<int>(this->proto_file(this->proto_file_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.GetServiceResponse.proto_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string proto_file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_proto_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proto_file_name(this->proto_file_name_size() - 1).data(),
            static_cast<int>(this->proto_file_name(this->proto_file_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "okrpc.GetServiceResponse.proto_file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:okrpc.GetServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:okrpc.GetServiceResponse)
  return false;
#undef DO_
}

void GetServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:okrpc.GetServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // repeated string proto_file = 2;
  for (int i = 0, n = this->proto_file_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_file(i).data(), static_cast<int>(this->proto_file(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceResponse.proto_file");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->proto_file(i), output);
  }

  // repeated string proto_file_name = 3;
  for (int i = 0, n = this->proto_file_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_file_name(i).data(), static_cast<int>(this->proto_file_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceResponse.proto_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->proto_file_name(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:okrpc.GetServiceResponse)
}

::google::protobuf::uint8* GetServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:okrpc.GetServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // repeated string proto_file = 2;
  for (int i = 0, n = this->proto_file_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_file(i).data(), static_cast<int>(this->proto_file(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceResponse.proto_file");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->proto_file(i), target);
  }

  // repeated string proto_file_name = 3;
  for (int i = 0, n = this->proto_file_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proto_file_name(i).data(), static_cast<int>(this->proto_file_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "okrpc.GetServiceResponse.proto_file_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->proto_file_name(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:okrpc.GetServiceResponse)
  return target;
}

size_t GetServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:okrpc.GetServiceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string proto_file = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->proto_file_size());
  for (int i = 0, n = this->proto_file_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->proto_file(i));
  }

  // repeated string proto_file_name = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->proto_file_name_size());
  for (int i = 0, n = this->proto_file_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->proto_file_name(i));
  }

  // .okrpc.ErrorCode error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:okrpc.GetServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:okrpc.GetServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:okrpc.GetServiceResponse)
    MergeFrom(*source);
  }
}

void GetServiceResponse::MergeFrom(const GetServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:okrpc.GetServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  proto_file_.MergeFrom(from.proto_file_);
  proto_file_name_.MergeFrom(from.proto_file_name_);
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void GetServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:okrpc.GetServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceResponse::CopyFrom(const GetServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:okrpc.GetServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceResponse::IsInitialized() const {
  return true;
}

void GetServiceResponse::Swap(GetServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceResponse::InternalSwap(GetServiceResponse* other) {
  using std::swap;
  proto_file_.InternalSwap(CastToBase(&other->proto_file_));
  proto_file_name_.InternalSwap(CastToBase(&other->proto_file_name_));
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetServiceResponse::GetMetadata() const {
  protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpcservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RpcService::~RpcService() {}

const ::google::protobuf::ServiceDescriptor* RpcService::descriptor() {
  protobuf_rpcservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpcservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* RpcService::GetDescriptor() {
  return descriptor();
}

void RpcService::listRpc(::google::protobuf::RpcController* controller,
                         const ::okrpc::ListRpcRequest*,
                         ::okrpc::ListRpcResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method listRpc() not implemented.");
  done->Run();
}

void RpcService::getService(::google::protobuf::RpcController* controller,
                         const ::okrpc::GetServiceRequest*,
                         ::okrpc::GetServiceResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method getService() not implemented.");
  done->Run();
}

void RpcService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_rpcservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      listRpc(controller,
             ::google::protobuf::down_cast<const ::okrpc::ListRpcRequest*>(request),
             ::google::protobuf::down_cast< ::okrpc::ListRpcResponse*>(response),
             done);
      break;
    case 1:
      getService(controller,
             ::google::protobuf::down_cast<const ::okrpc::GetServiceRequest*>(request),
             ::google::protobuf::down_cast< ::okrpc::GetServiceResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& RpcService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::okrpc::ListRpcRequest::default_instance();
    case 1:
      return ::okrpc::GetServiceRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& RpcService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::okrpc::ListRpcResponse::default_instance();
    case 1:
      return ::okrpc::GetServiceResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

RpcService_Stub::RpcService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
RpcService_Stub::RpcService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
RpcService_Stub::~RpcService_Stub() {
  if (owns_channel_) delete channel_;
}

void RpcService_Stub::listRpc(::google::protobuf::RpcController* controller,
                              const ::okrpc::ListRpcRequest* request,
                              ::okrpc::ListRpcResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void RpcService_Stub::getService(::google::protobuf::RpcController* controller,
                              const ::okrpc::GetServiceRequest* request,
                              ::okrpc::GetServiceResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace okrpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::okrpc::ListRpcRequest* Arena::CreateMaybeMessage< ::okrpc::ListRpcRequest >(Arena* arena) {
  return Arena::CreateInternal< ::okrpc::ListRpcRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::okrpc::ListRpcResponse* Arena::CreateMaybeMessage< ::okrpc::ListRpcResponse >(Arena* arena) {
  return Arena::CreateInternal< ::okrpc::ListRpcResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::okrpc::GetServiceRequest* Arena::CreateMaybeMessage< ::okrpc::GetServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::okrpc::GetServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::okrpc::GetServiceResponse* Arena::CreateMaybeMessage< ::okrpc::GetServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::okrpc::GetServiceResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
